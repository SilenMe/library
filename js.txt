import { LightningElement, wire, track } from 'lwc';
import getBookList from '@salesforce/apex/AccountController.getBookListByname'

const actions = [
    { label: 'Borrow Book', name: 'borrow_book' },
];

export default class SearchBook extends LightningElement {

    @track accounts
    searchType = 'Category'
    searchKey = ''
    searchValue = '' //passing value to button on click
    visibleContacts //pagination
    totalContacts //pagination


    @track columns = [

        {

            label: 'BookId',
            fieldName: 'Id',
            type: 'text',




        },

        {

            label: 'Book Name',
            fieldName: 'Name',
            type: 'text',




        },

        {

            label: 'Book Status',
            fieldName: 'Book_Status__c',
            type: 'text',




        },

        {

            label: 'Return Date',
            fieldName: 'Return_Date__c',
            type: 'text',




        },

        {

            type: 'action',

            typeAttributes: { rowActions: actions },

        },




    ]



    handleRowAction(event) {

        const actionName = event.detail.action.name;

        const row = event.detail.row;

        switch (actionName) {

            case 'borrow_book':



                break;



            default:

        }

    }



    @wire(getBookList, { param: '$searchType', type: '$searchKey' })

    wiredContact({ error, data }) { //pagination
        if (data) {
            this.totalContacts = data
            console.log(this.totalContacts)
        }
        if (error) {
            console.error(error)
        }
    }



    updateContactHandler(event) { //pagination
        this.visibleContacts = [...event.detail.records]
        console.log(event.detail.records)
    }


    handleData(response) {
        this.accounts = response.data

    }


    searchById(event) {



    }

    getSearchValue(event) { //to pass value from input to button

        this.searchValue = event.target.value

    }

    handleSearchKeyChange(event) {

        this.searchKey = this.searchValue //value passed to button from search input



    }
    byName(event) { //to pass value from input to button

        this.searchType = 'Name'

    }
    byId(event) { //to pass value from input to button

        this.searchType = 'Id'

    }
    byCategory(event) { //to pass value from input to button

        this.searchType = 'Category'

    }
    byAuthor(event) { //to pass value from input to button

        this.searchType = 'Author'

    }
}